
  # mkdir -p $HOME/.kube
  # sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  # sudo chown $(id -u):$(id -g) $HOME/.kube/config

- name: Create ~/.kube directory
  become: no
  file:
    path: ~/.kube
    state: directory
    mode: 0700

- name: Get user group
  shell: "id -g {{ ansible_user | default(lookup('env', 'USER'), True) }}"
  # run_once: true
  register: user_gid

- name: Slurp (read) /etc/kubernetes/admin.conf file
  slurp:
    src: /etc/kubernetes/admin.conf
  register: k8s_admin_conf
  run_once: true
  when: inventory_hostname == kubernetes_master_nodes | map(attribute='node') | first

- debug: msg="{{ k8s_admin_conf['content'] | b64decode }}"
  run_once: true

# - pause:

- name: Copy admin.conf file on ~/.kube
  copy:
    # src: /etc/kubernetes/admin.conf
    content: "{{ k8s_admin_conf['content'] | b64decode }}"
    dest: "/home/{{ ansible_user | default(lookup('env', 'USER'), True) }}/.kube/config"
    remote_src: yes
    owner: "{{ ansible_user | default(lookup('env', 'USER'), True) }}"
    group: "{{ user_gid.stdout }}"
    mode: 0600

- name: Run kubectl get nodes
  become: no
  shell: "kubectl get nodes"
  run_once: true
  register: kubectl_nodes
- debug: var=kubectl_nodes.stdout_lines

- name: Enable kubectl autocompletion
  become: no
  lineinfile:
    dest: ~/.bashrc
    state: present
    regexp: '^source <(kubectl completion bash)'
    line: 'source <(kubectl completion bash)'

- name: Enable alias kubectl
  become: no
  lineinfile:
    dest: ~/.bashrc
    state: present
    regexp: '^alias k=kubectl'
    line: 'alias k=kubectl'

- name: Enable alias kubectl
  become: no
  lineinfile:
    dest: ~/.bashrc
    state: present
    regexp: '^complete -F __start_kubectl k'
    line: 'complete -F __start_kubectl k'
